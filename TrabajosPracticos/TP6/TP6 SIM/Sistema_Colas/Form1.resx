<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>